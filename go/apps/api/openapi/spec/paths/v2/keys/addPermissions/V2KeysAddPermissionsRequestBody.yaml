type: object
required:
  - keyId
  - permissions
properties:
  keyId:
    type: string
    minLength: 3
    maxLength: 255 # Reasonable upper bound for database identifiers
    pattern: "^[a-zA-Z0-9_]+$"
    description: |
      Specifies which key receives the additional permissions using the database identifier returned from `keys.createKey`.
      Do not confuse this with the actual API key string that users include in requests.
      Added permissions supplement existing permissions and roles without replacing them.
      Permission changes take effect immediately but may take up to 30 seconds to propagate across all regions.
    example: key_2cGKbMxRyIzhCxo1Idjz8q
  permissions:
    type: array
    minItems: 1
    maxItems: 1000 # Allow extensive permission sets for complex applications
    description: |
      Grants additional permissions to the key through direct assignment or automatic creation.
      Duplicate permissions are ignored automatically, making this operation idempotent.
      Use either ID for existing permissions or slug for new permissions with optional auto-creation.

      Permission changes take effect immediately but cache propagation across regions may take up to 30 seconds.
      Adding permissions never removes existing permissions or role-based permissions.
    items:
      $ref: "../../../../common/addPermissionReference.yaml"
additionalProperties: false
example:
  keyId: key_1234567890abcdef
  permissions:
    - id: perm_1234567890abcdef
    - slug: documents.write
      create: true
    - slug: users.read
