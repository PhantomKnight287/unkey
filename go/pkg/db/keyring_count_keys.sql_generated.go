// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: keyring_count_keys.sql

package db

import (
	"context"
)

const countKeysForKeySpace = `-- name: CountKeysForKeySpace :one
SELECT
  COUNT(*) as count
FROM ` + "`" + `keys` + "`" + `
WHERE
  key_auth_id = ?
  AND deleted_at_m IS NULL
`

// CountKeysForKeySpace
//
//	SELECT
//	  COUNT(*) as count
//	FROM `keys`
//	WHERE
//	  key_auth_id = ?
//	  AND deleted_at_m IS NULL
func (q *Queries) CountKeysForKeySpace(ctx context.Context, db DBTX, keyAuthID string) (int64, error) {
	row := db.QueryRowContext(ctx, countKeysForKeySpace, keyAuthID)
	var count int64
	err := row.Scan(&count)
	return count, err
}
